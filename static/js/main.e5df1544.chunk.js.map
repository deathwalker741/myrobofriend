{"version":3,"sources":["reportWebVitals.js","components/SearchBox.js","components/Card.js","components/Cardlist.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","src","alt","Cardlist","robot","cardComponents","map","user","i","Scroll","props","style","overflow","height","children","App","onSearchChange","event","setState","Searchfield","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robots","toLowerCase","includes","length","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACJ,qBAAKC,UAAY,MAAjB,SACI,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAc,gBACdC,SAAWJ,OCKAK,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKP,UAAU,qDAAf,UACE,qBAAKQ,IAAG,+BAA0BD,EAA1B,YAAwCE,IAAI,UAEpD,gCACI,6BAAKJ,IACL,4BAAIC,WCOHI,EAbE,SAAC,GAAW,IAAVC,EAAS,EAATA,MACTC,EAAiBD,EAAME,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAAaR,GAAII,EAAMI,GAAGR,GAAIF,KAAMM,EAAMI,GAAGV,KAAMC,MAAOK,EAAMI,GAAGT,OAAxDS,MAGtB,OACI,8BACKH,KCAEI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,SAA1C,SACKH,EAAMI,YC2CJC,E,kDAxCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACTlB,MAAO,GACPe,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfI,MAAM,8CACLvC,MAAK,SAAAwC,GAAQ,OAAIA,EAASC,UAC1BzC,MAAK,SAAA0C,GAAK,OAAI,EAAKR,SAAS,CAAEd,MAAQsB,S,oBAQ3C,WAAS,IAAD,OACEC,EAAiBC,KAAKN,MAAMlB,MAAMyB,QAAO,SAAAC,GAC3C,OAAOA,EAAOhC,KAAKiC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAErE,OAA+B,IAA5BH,KAAKN,MAAMlB,MAAM6B,OACT,yCAGX,gCACI,oBAAIxC,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcoC,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUZ,MAAOuB,a,GAjCXO,IAAMC,WCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAIJC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.e5df1544.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n<div className = 'pa2'>\r\n    <input \r\n    className='pa3 ba b--green bg-lightest-blue' \r\n    type=\"search\" \r\n    placeholder = \"Search robots\" \r\n    onChange= {searchChange}\r\n    />\r\n</div>    \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n          <img src={`https://robohash.org/${id}?200*200`} alt=\"robot\"/>\r\n\r\n          <div>\r\n              <h2>{name}</h2>\r\n              <p>{email}</p>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robot})=>{\r\n    const cardComponents = robot.map((user, i) => {\r\n        return <Card key={i}id={robot[i].id} name={robot[i].name} email={robot[i].email}/>\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {cardComponents}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{ overflow: 'scroll', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport SearchBox from '../components/SearchBox'\r\nimport Cardlist from '../components/Cardlist';\r\nimport Scroll from '../components/Scroll';\r\n// import { robot } from './robot';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robot: [],\r\n            Searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robot : users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ Searchfield: event.target.value});  \r\n    }\r\n\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robot.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.Searchfield.toLowerCase());\r\n        });\r\n        if(this.state.robot.length === 0){\r\n            return <h1>Loading</h1>;\r\n        }else{\r\n    return(\r\n        <div>\r\n            <h1 className=\"f1\">ROBOFRIENDS</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n            <Cardlist robot={filteredRobots}/>\r\n            </Scroll>\r\n            \r\n        </div>\r\n    )\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App/>\n    </div>\n      \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}